#!/usr/bin/env ruby

require 'rubygems'
require 'thor'
require 'benchmark'
require_relative '../lib/hockeypuck'

class Puck < Thor
  map '-l' => :list

  desc 'list', 'Shows all pucks to get'
  method_option '-s', aliases: '--started', desc: 'started tasks'
  method_option '-q', aliases: '--queued', desc: 'queued tasks'
  method_option '-f', aliases: '--finished', desc: 'finished tasks'
  method_option '-d', aliases: '--declined', desc: 'declined tasks'
  def list
    puts 'asdf'
  end

  desc 'get', 'Downloads a file'
  def get
    puck = Hockeypuck.new
  end

  desc 'async downloading', 'Downloads file in 5 workers'
  def async
    puts Benchmark.measure {
      puck = Hockeypuck.new 'http://www.nasa.gov/images/content/706436main_20121114-304-193Blend_M6-orig_full.jpg'
      puck.start!
    }
  end

  desc 'simple downloading', 'Downloads file in 1 thread'
  def simple
    puts Benchmark.measure {
      puck = Hockeypuck.new 'http://www.nasa.gov/images/content/706436main_20121114-304-193Blend_M6-orig_full.jpg'
      puck.start!(true)
    }
  end

end

Puck.start
